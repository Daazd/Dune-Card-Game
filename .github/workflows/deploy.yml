name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Frontend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./Dune-Front-End
        file: ./Dune-Front-End/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/dune-frontend:latest

    - name: Build and push Backend Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/dune-backend:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.0'  # Use the version that matches your cluster

    - name: Deploy to Kubernetes
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        echo "$KUBE_CONFIG" | base64 -d > kubeconfig
        kubectl --kubeconfig=kubeconfig apply -f k8s/

    - name: Debug Kubernetes deployment
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        echo "$KUBE_CONFIG" | base64 -d > kubeconfig
        kubectl --kubeconfig=kubeconfig get pods
        kubectl --kubeconfig=kubeconfig logs -l app=dune-frontend
        kubectl --kubeconfig=kubeconfig logs -l app=dune-backend

#push







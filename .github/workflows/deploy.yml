name: CI/CD Pipeline for LKE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Frontend Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/dune-frontend:latest ./Dunecardgame/Dune-Front-End

    - name: Push Frontend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/dune-frontend:latest

    - name: Build Backend Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/dune-backend:latest ./Dunecardgame

    - name: Push Backend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/dune-backend:latest

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Linode CLI
      run: |
        pip install linode-cli
  
    - name: Configure Linode CLI
      env:
        LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
      run: |
        linode-cli configure --token $LINODE_CLI_TOKEN
    
    - name: Test Linode CLI
      run: |
        linode-cli --version
        linode-cli regions list

    - name: Get LKE kubeconfig
      env:
        CLUSTER_ID: ${{ secrets.CLUSTER_ID }}
      run: |
        echo "Using Cluster ID: $CLUSTER_ID"
        linode-cli lke kubeconfig-view $CLUSTER_ID --text > kubeconfig.yaml
        if [ $? -ne 0 ]; then
          echo "Error: Failed to get kubeconfig"
          exit 1
        fi
        echo "Successfully retrieved kubeconfig"
        # Check the content of the kubeconfig file
        echo "First few lines of kubeconfig:"
        head -n 10 kubeconfig.yaml
        # Verify the file is valid YAML
        python -c "import yaml; yaml.safe_load(open('kubeconfig.yaml'))"

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.0'

    - name: Deploy to LKE
      run: |
        # Verify kubeconfig content
        echo "Kubeconfig content:"
        cat kubeconfig.yaml
        
        export KUBECONFIG=$(pwd)/kubeconfig.yaml
        
        kubectl config view
        
        kubectl apply -f ./Dunecardgame/k8s/

    - name: Verify deployment
      run: |
        export KUBECONFIG=$(pwd)/kubeconfig.yaml
        kubectl get pods
        kubectl get services


#push







name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Frontend Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/dune-frontend:latest ./Dunecardgame/Dune-Front-End

    - name: Push Frontend Docker image in chunks
      run: |
        docker save ${{ secrets.DOCKER_USERNAME }}/dune-frontend:latest | gzip | split -b 20m - frontend-image-chunk
        for chunk in frontend-image-chunk*; do
          curl -X POST -H "Content-Type: application/octet-stream" --data-binary @$chunk \
            -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" \
            "https://registry-1.docker.io/v2/${{ secrets.DOCKER_USERNAME }}/dune-frontend/blobs/uploads/?digest=sha256:$(sha256sum $chunk | cut -d' ' -f1)"
        done

    - name: Build Backend Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/dune-backend:latest ./Dunecardgame

    - name: Push Backend Docker image in chunks
      run: |
        docker save ${{ secrets.DOCKER_USERNAME }}/dune-backend:latest | gzip | split -b 20m - backend-image-chunk
        for chunk in backend-image-chunk*; do
          curl -X POST -H "Content-Type: application/octet-stream" --data-binary @$chunk \
            -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" \
            "https://registry-1.docker.io/v2/${{ secrets.DOCKER_USERNAME }}/dune-backend/blobs/uploads/?digest=sha256:$(sha256sum $chunk | cut -d' ' -f1)"
        done

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.0'  # Use the version that matches your cluster

    - name: Deploy to Kubernetes
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        echo "$KUBE_CONFIG" | base64 -d > kubeconfig
        kubectl --kubeconfig=kubeconfig apply -f Dunecardgame/k8s/

    - name: Debug Kubernetes deployment
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        echo "$KUBE_CONFIG" | base64 -d > kubeconfig
        kubectl --kubeconfig=kubeconfig get pods
        kubectl --kubeconfig=kubeconfig logs -l app=dune-frontend
        kubectl --kubeconfig=kubeconfig logs -l app=dune-backend

#push







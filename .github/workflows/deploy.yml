name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Debug information
      run: |
        echo "Current directory structure:"
        ls -R
        echo "Python path:"
        python -c "import sys; print(sys.path)"
        echo "Content of manage.py:"
        cat manage.py
        echo "Content of Dunecardgame/settings.py:"
        cat Dunecardgame/settings.py
    
    - name: Build and push Docker image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker build -t $DOCKER_USERNAME/dune-backend:latest .
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        docker push $DOCKER_USERNAME/dune-backend:latest
    
    - name: Deploy to Kubernetes
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        echo "$KUBE_CONFIG" | base64 -d > kubeconfig
        kubectl --kubeconfig=kubeconfig set image deployment/dune-backend-deployment dune-backend=${{ secrets.DOCKER_USERNAME }}/dune-backend:latest
        kubectl --kubeconfig=kubeconfig rollout status deployment/dune-backend-deployment
        kubectl --kubeconfig=kubeconfig get pods
        kubectl --kubeconfig=kubeconfig logs -l app=dune-backend

    - name: Debug Kubernetes deployment
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        echo "$KUBE_CONFIG" | base64 -d > kubeconfig
        kubectl --kubeconfig=kubeconfig describe deployment dune-backend-deployment
        kubectl --kubeconfig=kubeconfig get pods
        kubectl --kubeconfig=kubeconfig logs -l app=dune-backend

#push






